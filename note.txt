Artisan
    php artisan serve
    php artisan make:controller NameController
    //kontrolery są tworzone w /app/http/controllers
    Route::get('/home', 'HomeController@index');

    php artisan migrate - utworzy tabele z migracji
    php artisan migrate:fresh - wywali utworzone tabele, i utworzy je od nowa

    w php można wpisać error_log('cokolwiek')

Blade syntax
        {{ $var }} - wyświetl zmienna przekazaną do widoku
    -------------------------------------   
        instrukcje warunkowe:
            @if($var > 10)
            // some code
            @endif
        
    -----------------------------------------
            if...else if....else

        @if($var > 10)
        
            // some code
        @elseif($var < 10)
            //some code
        @else
            //some code
        @endif
    ----------------------------------------------   
    unless (reverse IF)
        @unless ($var = 2)
        //some code
        @endunless

    --------------------------------
    regularne php w Blade

        @php

        //some code


        @endphp

    --------------------

        pętle w Blade

        @for($i = 1; $i < 10; $i++)

            /some code
        @endfor


    -----------------------

        foreach

        @foreach(@arr as $element)
            //some code
            //jest zmienna $loop zawierająca info o pętli
            //$loop -> index zawiera iterator 
        @endforeach

    ----------------------------

    template

        @extends('layouts.plik')
        @section('content')
        @endsection
        @yield('content')

    -------------------------------

    Do używania redirectów, należy użyć dyrektywy @csrf

    @method('DELETE')

Query Strings
    www.srogiehacjendy.com/home?source=facebook

    $source = request("source");
    //nie używamy GET w laravelu

Route Parameters
    www.srogiehacjendy.com/2
    www.srogiehacjendy.com/7
    www.srogiehacjendy.com/343434
    www.srogiehacjendy.com/marek

    np. konkretne ogłoszenie (przez ID)

    Route::get('/home/{id}', function ($id) {
        //używamy id do wyciągnięcia danych z bazy
        return view('offerDetail', []);
    });

Migracje
    php artisan migrate - utworzy tabele z migracji
    php artisan migrate:fresh - wywali tabele, i utworzy je od nowa
    php artisan migrate:rollback - cofa ostatnie zmiany
    php artisan migrate:reset - wywala tabele utworzone przez Artisan, i tworzy je ponownie
    php artisan migrate:status - status migracji

    Do dodawania kolumn do istniejących tabel, należy stworzyć nową migrację
    nazwa migracji MA znaczenie
    php artisan make:migration add_column_to_table

Modele
    php artisan make:model Offer
    Model::all() - zwraca wszystkie rekordy z tabbeli jako array
    Model::orderBy('column','desc')->get(); - zwraca wszystkie rekordy z tabeli posortowane po tabeli
    MOdel::where('column', 'value') -> get();
    Model:latest() -> get(); 
    Model::find($id) - zwraca rekord o danym id
    Model::findOrFail($id) - zwraca rekord o danym id, jeśli nie istnieje, zwraca 404
Przyjęte nazewnictwo
    Route           controller&action       Viev
    /name           NameController@index    index
    /name/{id}      NameController@show     show
    /name/create    NameController@create   create


